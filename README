phpsog - PHP Static Output Generator

The software is published under the MIT License (see LICENSE).

This is a very early release.

Marc Ermshaus <marc@ermshaus.org>


Take a look at webdevbuch <https://github.com/mermshaus/webdevbuch> to see how
phpsog may be used as a build tool within a project. A live version of the
compiled project is available at <http://buch.ermshaus.org/>.

If phpsog is not what you are looking for, you might want to try Victor
Farazdagi’s phrozn <http://www.phrozn.info/>.


Setup
-----

This step is needed to set up your phpsog distribution. phpsog uses Composer
<http://getcomposer.org/> and Packagist <http://packagist.org/> for dependency
management.

    Note: Composer is a lightweight project-based package manager for PHP. That
    basically means two things:

    (1) You don’t have to install Composer on your system. It’s just a single
        .phar file you put in your project directory and it will work within
        that directory. There are no global implications of any kind. Also,
        Composer is not meant to be deployed to a production system. It is
        nothing but a setup tool.

    (2) „Composed“ projects have no global dependencies. Just upload the files
        generated by Composer to your web space. It will work like everything
        else without any additional demands to the environment.

Run the following commands from the project’s root directory to install the
dependencies. They will be written to the ./vendor subdirectory.

    $ curl -s http://getcomposer.org/installer | php
    $ php composer.phar install

All depedencies are listed in ./composer.json.


Compile the documentation
-------------------------

phpsog comes bundled with the source files for its documentation website. Run
these commands from the root directory to create the website in
./export/phpsogdoc.

    $ ./phpsog demos/phpsogdoc


Quick introduction
------------------

1. Navigate to phpsog's root directory. (The directory containing the README
   file and the phpsog executable.)

2. Create directories for a new project "hello-world".

    $ mkdir demos/hello-world
    $ mkdir demos/hello-world/layouts
    $ mkdir demos/hello-world/pages
    $ mkdir demos/hello-world/resources

3. Create export directory for generated static HTML output.

    $ mkdir export/hello-world

4. Create a default layout for the project.

    $ touch demos/hello-world/layouts/default.phtml

        <!DOCTYPE html>

        <html lang="en">

            <head>
                <meta charset="UTF-8" />
                <title>Hello World Project</title>
            </head>

            <body>

                <?=$content?>

            </body>

        </html>

   Note the line with <?=$content?>. This is where an individual page’s content
   will be written into the layout file.

5. Create an index page and one other page.

    $ touch demos/hello-world/pages/index.phtml

        <h1>Index page</h1>

    $ touch demos/hello-world/pages/other.phtml

        <h1>Another page</h1>

6. Create a config file. There are more options but setting the export directory
   will do for now (see documentation for more). All paths are relative to the
   config file’s location.

    $ touch demos/hello-world/phpsog.ini

        export.dir = "../../export/hello-world"

7. Run phpsog and generate the HTML output.

    $ ./phpsog demos/hello-world

        [export] export/hello-world/index.html
        [export] export/hello-world/other.html

8. View the generated output.

    $ cat export/hello-world/index.html

        <!DOCTYPE html>

        <html lang="en">

            <head>
                <meta charset="UTF-8" />
                <title>Hello World Project</title>
            </head>

            <body>

                <h1>Index page</h1>

            </body>

        </html>

    $ cat export/hello-world/other.html

        <!DOCTYPE html>

        <html lang="en">

            <head>
                <meta charset="UTF-8" />
                <title>Hello World Project</title>
            </head>

            <body>

                <h1>Another page</h1>

            </body>

        </html>
