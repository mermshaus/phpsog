<?php

/* @var $this Phpsog\Provider\Html\Provider */
$this->setTitle('Command-line interface');

$x['menuActive'] = 'docs/cli';

$h = function ($commandName = null) {
    $f = new Phpsog\Factory();
    $app = $f->createNewApplication();

    $bf = new Phpsog\BufferLogger();
    $app->setLogger($bf);

    if ($commandName === null) {
        $cmd = new Phpsog\Command\HelpCommand(array('', ''));
    } else {
        $cmd = new Phpsog\Command\HelpCommand(array('', '', $commandName));
    }

    $app->executeCommand($cmd);

    return $bf->getLog();
};

?>

<h1>Command-line interface</h1>

<p>Note: phpsog tries to be conservative when deleting existing files or directories. Think twice, delete once.</p>

<pre><code><?php echo $this->escape($h()); ?></code></pre>

<p>Running <code>phpsog</code> without any arguments is equal to running <code>phpsog build</code> which is practically equal to <code>phpsog build ./phpsog.ini</code>.</p>

<p><code>--version</code> and <code>--help</code> generate the same output as the <code>version</code> and <code>help</code> commands.</p>


<h2>The build command</h2>

<pre><code><?php echo $this->escape($h('build')); ?></code></pre>

<p>If <var>path</var> is not specified, the current working directory will be used instead. If <var>path</var> points to a file, phpsog will treat this file as a <a href="./config.html">config file</a>. If <var>path</var> points to a directory, phpsog will look for a phpsog.ini file in this directory and treat this file as a config file.</p>

<p>The <code>--clean</code> switch will <em>delete and recreate</em> the export directory if it contains a .phpsog subdirectory (which will be created by default by the build routine). This check is a safety measure to prevent accidental data loss. Be careful though, as phpsog <em>will delete all contents of the export directory</em>, regardless whether they were generated by phpsog or not.</p>



<h2>The help command</h2>

<pre><code><?php echo $this->escape($h('help')); ?></code></pre>

<p>If <var>command</var> is not specified, a list of commands is printed.</p>



<h2>The init command</h2>

<pre><code><?php echo $this->escape($h('init')); ?></code></pre>

<p>If <var>path</var> is not specified, the current working directory will be used.</p>



<h2>The version command</h2>

<pre><code><?php echo $this->escape($h('version')); ?></code></pre>
